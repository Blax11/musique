<?xml version="1.0" encoding="UTF-8"?>
<project name="musique" default="all">


    <property file="musique.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
        <include name="**/?*.ser"/>
        <include name="**/?*.sql"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
    <path id="jdk.classpath.1.6">
        <fileset dir="${jdk.home.1.6}">
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/about.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/javazic.jar"/>
            <include name="jre/lib/rhino.jar"/>
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/compilefontconfig.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/pulse-java.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/gnome-java-bridge.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.6}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>


    <!-- Project Libraries -->

    <!-- Modules -->


    <!-- Module cuelib -->

    <dirname property="module.cuelib.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.cuelib" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.cuelib" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.cuelib" value="${project.jdk.classpath}"/>

    <property name="compiler.args.cuelib" value="${compiler.args}"/>

    <property name="cuelib.output.dir" value="${module.cuelib.basedir}/out/production/cuelib"/>
    <property name="cuelib.testoutput.dir" value="${module.cuelib.basedir}/out/test/cuelib"/>

    <path id="cuelib.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="cuelib.module.classpath">
        <path refid="${module.jdk.classpath.cuelib}"/>
    </path>

    <path id="cuelib.runtime.module.classpath">
        <pathelement location="${cuelib.output.dir}"/>
        <pathelement location="${cuelib.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.cuelib">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.cuelib">
        <patternset refid="excluded.from.module.cuelib"/>
    </patternset>

    <path id="cuelib.module.sourcepath">
        <dirset dir="${module.cuelib.basedir}/modules/cuelib">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.cuelib" depends="compile.module.cuelib.production,compile.module.cuelib.tests"
            description="Compile module cuelib"/>

    <target name="compile.module.cuelib.production" description="Compile module cuelib; production classes">
        <mkdir dir="${cuelib.output.dir}"/>
        <javac destdir="${cuelib.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.cuelib}/javac">
            <compilerarg line="${compiler.args.cuelib}"/>
            <bootclasspath refid="cuelib.module.bootclasspath"/>
            <classpath refid="cuelib.module.classpath"/>
            <src refid="cuelib.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.cuelib"/>
        </javac>

        <copy todir="${cuelib.output.dir}">
            <fileset dir="${module.cuelib.basedir}/modules/cuelib/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.cuelib.tests" depends="compile.module.cuelib.production"
            description="compile module cuelib; test classes" unless="skip.tests"/>

    <target name="clean.module.cuelib" description="cleanup module">
        <delete dir="${cuelib.output.dir}"/>
        <delete dir="${cuelib.testoutput.dir}"/>
    </target>


    <!-- Module javalayer -->

    <dirname property="module.javalayer.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.javalayer" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.javalayer" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.javalayer" value="${project.jdk.classpath}"/>

    <property name="compiler.args.javalayer" value="${compiler.args}"/>

    <property name="javalayer.output.dir" value="${module.javalayer.basedir}/out/production/javalayer"/>
    <property name="javalayer.testoutput.dir" value="${module.javalayer.basedir}/out/test/javalayer"/>

    <path id="javalayer.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="javalayer.module.classpath">
        <path refid="${module.jdk.classpath.javalayer}"/>
    </path>

    <path id="javalayer.runtime.module.classpath">
        <pathelement location="${javalayer.output.dir}"/>
        <pathelement location="${javalayer.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.javalayer">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.javalayer">
        <patternset refid="excluded.from.module.javalayer"/>
    </patternset>

    <path id="javalayer.module.sourcepath">
        <dirset dir="${module.javalayer.basedir}/modules/javalayer">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.javalayer" depends="compile.module.javalayer.production,compile.module.javalayer.tests"
            description="Compile module javalayer"/>

    <target name="compile.module.javalayer.production" description="Compile module javalayer; production classes">
        <mkdir dir="${javalayer.output.dir}"/>
        <javac destdir="${javalayer.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.javalayer}/javac">
            <compilerarg line="${compiler.args.javalayer}"/>
            <bootclasspath refid="javalayer.module.bootclasspath"/>
            <classpath refid="javalayer.module.classpath"/>
            <src refid="javalayer.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.javalayer"/>
        </javac>

        <copy todir="${javalayer.output.dir}">
            <fileset dir="${module.javalayer.basedir}/modules/javalayer/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.javalayer.tests" depends="compile.module.javalayer.production"
            description="compile module javalayer; test classes" unless="skip.tests"/>

    <target name="clean.module.javalayer" description="cleanup module">
        <delete dir="${javalayer.output.dir}"/>
        <delete dir="${javalayer.testoutput.dir}"/>
    </target>


    <!-- Module jflac -->

    <dirname property="module.jflac.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.jflac" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.jflac" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.jflac" value="${project.jdk.classpath}"/>

    <property name="compiler.args.jflac" value="${compiler.args}"/>

    <property name="jflac.output.dir" value="${module.jflac.basedir}/out/production/jflac"/>
    <property name="jflac.testoutput.dir" value="${module.jflac.basedir}/out/test/jflac"/>

    <path id="jflac.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="jflac.module.classpath">
        <path refid="${module.jdk.classpath.jflac}"/>
    </path>

    <path id="jflac.runtime.module.classpath">
        <pathelement location="${jflac.output.dir}"/>
        <pathelement location="${jflac.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.jflac">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.jflac">
        <patternset refid="excluded.from.module.jflac"/>
    </patternset>

    <path id="jflac.module.sourcepath">
        <dirset dir="${module.jflac.basedir}/modules/jflac">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.jflac" depends="compile.module.jflac.production,compile.module.jflac.tests"
            description="Compile module jflac"/>

    <target name="compile.module.jflac.production" description="Compile module jflac; production classes">
        <mkdir dir="${jflac.output.dir}"/>
        <javac destdir="${jflac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jflac}/javac">
            <compilerarg line="${compiler.args.jflac}"/>
            <bootclasspath refid="jflac.module.bootclasspath"/>
            <classpath refid="jflac.module.classpath"/>
            <src refid="jflac.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.jflac"/>
        </javac>

        <copy todir="${jflac.output.dir}">
            <fileset dir="${module.jflac.basedir}/modules/jflac/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.jflac.tests" depends="compile.module.jflac.production"
            description="compile module jflac; test classes" unless="skip.tests"/>

    <target name="clean.module.jflac" description="cleanup module">
        <delete dir="${jflac.output.dir}"/>
        <delete dir="${jflac.testoutput.dir}"/>
    </target>


    <!-- Module jmac -->

    <dirname property="module.jmac.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.jmac" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.jmac" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.jmac" value="${project.jdk.classpath}"/>

    <property name="compiler.args.jmac" value="${compiler.args}"/>

    <property name="jmac.output.dir" value="${module.jmac.basedir}/out/production/jmac"/>
    <property name="jmac.testoutput.dir" value="${module.jmac.basedir}/out/test/jmac"/>

    <path id="jmac.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="jmac.module.classpath">
        <path refid="${module.jdk.classpath.jmac}"/>
    </path>

    <path id="jmac.runtime.module.classpath">
        <pathelement location="${jmac.output.dir}"/>
        <pathelement location="${jmac.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.jmac">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.jmac">
        <patternset refid="excluded.from.module.jmac"/>
    </patternset>

    <path id="jmac.module.sourcepath">
        <dirset dir="${module.jmac.basedir}/modules/jmac">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.jmac" depends="compile.module.jmac.production,compile.module.jmac.tests"
            description="Compile module jmac"/>

    <target name="compile.module.jmac.production" description="Compile module jmac; production classes">
        <mkdir dir="${jmac.output.dir}"/>
        <javac destdir="${jmac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jmac}/javac">
            <compilerarg line="${compiler.args.jmac}"/>
            <bootclasspath refid="jmac.module.bootclasspath"/>
            <classpath refid="jmac.module.classpath"/>
            <src refid="jmac.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.jmac"/>
        </javac>

        <copy todir="${jmac.output.dir}">
            <fileset dir="${module.jmac.basedir}/modules/jmac/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.jmac.tests" depends="compile.module.jmac.production"
            description="compile module jmac; test classes" unless="skip.tests"/>

    <target name="clean.module.jmac" description="cleanup module">
        <delete dir="${jmac.output.dir}"/>
        <delete dir="${jmac.testoutput.dir}"/>
    </target>


    <!-- Module jorbis -->

    <dirname property="module.jorbis.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.jorbis" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.jorbis" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.jorbis" value="${project.jdk.classpath}"/>

    <property name="compiler.args.jorbis" value="${compiler.args}"/>

    <property name="jorbis.output.dir" value="${module.jorbis.basedir}/out/production/jorbis"/>
    <property name="jorbis.testoutput.dir" value="${module.jorbis.basedir}/out/test/jorbis"/>

    <path id="jorbis.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="jorbis.module.classpath">
        <path refid="${module.jdk.classpath.jorbis}"/>
    </path>

    <path id="jorbis.runtime.module.classpath">
        <pathelement location="${jorbis.output.dir}"/>
        <pathelement location="${jorbis.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.jorbis">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.jorbis">
        <patternset refid="excluded.from.module.jorbis"/>
    </patternset>

    <path id="jorbis.module.sourcepath">
        <dirset dir="${module.jorbis.basedir}/modules/jorbis">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.jorbis" depends="compile.module.jorbis.production,compile.module.jorbis.tests"
            description="Compile module jorbis"/>

    <target name="compile.module.jorbis.production" description="Compile module jorbis; production classes">
        <mkdir dir="${jorbis.output.dir}"/>
        <javac destdir="${jorbis.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jorbis}/javac">
            <compilerarg line="${compiler.args.jorbis}"/>
            <bootclasspath refid="jorbis.module.bootclasspath"/>
            <classpath refid="jorbis.module.classpath"/>
            <src refid="jorbis.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.jorbis"/>
        </javac>

        <copy todir="${jorbis.output.dir}">
            <fileset dir="${module.jorbis.basedir}/modules/jorbis/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.jorbis.tests" depends="compile.module.jorbis.production"
            description="compile module jorbis; test classes" unless="skip.tests"/>

    <target name="clean.module.jorbis" description="cleanup module">
        <delete dir="${jorbis.output.dir}"/>
        <delete dir="${jorbis.testoutput.dir}"/>
    </target>


    <!-- Module wavpack -->

    <dirname property="module.wavpack.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.wavpack" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.wavpack" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.wavpack" value="${project.jdk.classpath}"/>

    <property name="compiler.args.wavpack" value="${compiler.args}"/>

    <property name="wavpack.output.dir" value="${module.wavpack.basedir}/out/production/wavpack"/>
    <property name="wavpack.testoutput.dir" value="${module.wavpack.basedir}/out/test/wavpack"/>

    <path id="wavpack.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="wavpack.module.classpath">
        <path refid="${module.jdk.classpath.wavpack}"/>
    </path>

    <path id="wavpack.runtime.module.classpath">
        <pathelement location="${wavpack.output.dir}"/>
        <pathelement location="${wavpack.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.wavpack">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.wavpack">
        <patternset refid="excluded.from.module.wavpack"/>
    </patternset>

    <path id="wavpack.module.sourcepath">
        <dirset dir="${module.wavpack.basedir}/modules/wavpack">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.wavpack" depends="compile.module.wavpack.production,compile.module.wavpack.tests"
            description="Compile module wavpack"/>

    <target name="compile.module.wavpack.production" description="Compile module wavpack; production classes">
        <mkdir dir="${wavpack.output.dir}"/>
        <javac destdir="${wavpack.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.wavpack}/javac">
            <compilerarg line="${compiler.args.wavpack}"/>
            <bootclasspath refid="wavpack.module.bootclasspath"/>
            <classpath refid="wavpack.module.classpath"/>
            <src refid="wavpack.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.wavpack"/>
        </javac>

        <copy todir="${wavpack.output.dir}">
            <fileset dir="${module.wavpack.basedir}/modules/wavpack/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.wavpack.tests" depends="compile.module.wavpack.production"
            description="compile module wavpack; test classes" unless="skip.tests"/>

    <target name="clean.module.wavpack" description="cleanup module">
        <delete dir="${wavpack.output.dir}"/>
        <delete dir="${wavpack.testoutput.dir}"/>
    </target>


    <!-- Module jaudiotagger -->

    <dirname property="module.jaudiotagger.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.jaudiotagger" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.jaudiotagger" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.jaudiotagger" value="${project.jdk.classpath}"/>

    <property name="compiler.args.jaudiotagger" value="${compiler.args}"/>

    <property name="jaudiotagger.output.dir" value="${module.jaudiotagger.basedir}/out/production/jaudiotagger"/>
    <property name="jaudiotagger.testoutput.dir" value="${module.jaudiotagger.basedir}/out/test/jaudiotagger"/>

    <path id="jaudiotagger.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="jaudiotagger.module.classpath">
        <path refid="${module.jdk.classpath.jaudiotagger}"/>
        <pathelement location="${wavpack.output.dir}"/>
        <pathelement location="${wavpack.testoutput.dir}"/>
    </path>

    <path id="jaudiotagger.runtime.module.classpath">
        <pathelement location="${jaudiotagger.output.dir}"/>
        <pathelement location="${jaudiotagger.testoutput.dir}"/>
        <path refid="wavpack.runtime.module.classpath"/>
    </path>


    <patternset id="excluded.from.module.jaudiotagger">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.jaudiotagger">
        <patternset refid="excluded.from.module.jaudiotagger"/>
    </patternset>

    <path id="jaudiotagger.module.sourcepath">
        <dirset dir="${module.jaudiotagger.basedir}/modules/jaudiotagger">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.jaudiotagger"
            depends="compile.module.jaudiotagger.production,compile.module.jaudiotagger.tests"
            description="Compile module jaudiotagger"/>

    <target name="compile.module.jaudiotagger.production" depends="compile.module.wavpack"
            description="Compile module jaudiotagger; production classes">
        <mkdir dir="${jaudiotagger.output.dir}"/>
        <javac destdir="${jaudiotagger.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jaudiotagger}/javac">
            <compilerarg line="${compiler.args.jaudiotagger}"/>
            <bootclasspath refid="jaudiotagger.module.bootclasspath"/>
            <classpath refid="jaudiotagger.module.classpath"/>
            <src refid="jaudiotagger.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.jaudiotagger"/>
        </javac>

        <copy todir="${jaudiotagger.output.dir}">
            <fileset dir="${module.jaudiotagger.basedir}/modules/jaudiotagger/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.jaudiotagger.tests" depends="compile.module.jaudiotagger.production"
            description="compile module jaudiotagger; test classes" unless="skip.tests"/>

    <target name="clean.module.jaudiotagger" description="cleanup module">
        <delete dir="${jaudiotagger.output.dir}"/>
        <delete dir="${jaudiotagger.testoutput.dir}"/>
    </target>


    <!-- Module musique -->

    <dirname property="module.musique.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.musique" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.musique" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.musique" value="${project.jdk.classpath}"/>

    <property name="compiler.args.musique" value="${compiler.args}"/>

    <property name="musique.output.dir" value="${module.musique.basedir}/out/production/musique"/>
    <property name="musique.testoutput.dir" value="${module.musique.basedir}/out/test/musique"/>

    <path id="musique.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="musique.module.classpath">
        <path refid="${module.jdk.classpath.musique}"/>
        <pathelement location="${jaudiotagger.output.dir}"/>
        <pathelement location="${jaudiotagger.testoutput.dir}"/>
        <pathelement location="${wavpack.output.dir}"/>
        <pathelement location="${wavpack.testoutput.dir}"/>
        <pathelement location="${cuelib.output.dir}"/>
        <pathelement location="${cuelib.testoutput.dir}"/>
        <pathelement location="${javalayer.output.dir}"/>
        <pathelement location="${javalayer.testoutput.dir}"/>
        <pathelement location="${jflac.output.dir}"/>
        <pathelement location="${jflac.testoutput.dir}"/>
        <pathelement location="${jmac.output.dir}"/>
        <pathelement location="${jmac.testoutput.dir}"/>
        <pathelement location="${jorbis.output.dir}"/>
        <pathelement location="${jorbis.testoutput.dir}"/>
        <pathelement location="${basedir}/lib/junit-4.7.jar"/>
        <pathelement location="${basedir}/lib/hsqldb.jar"/>
    </path>

    <path id="musique.runtime.module.classpath">
        <pathelement location="${musique.output.dir}"/>
        <pathelement location="${musique.testoutput.dir}"/>
        <path refid="jaudiotagger.runtime.module.classpath"/>
        <path refid="wavpack.runtime.module.classpath"/>
        <path refid="cuelib.runtime.module.classpath"/>
        <path refid="javalayer.runtime.module.classpath"/>
        <path refid="jflac.runtime.module.classpath"/>
        <path refid="jmac.runtime.module.classpath"/>
        <path refid="jorbis.runtime.module.classpath"/>
        <pathelement location="${basedir}/lib/junit-4.7.jar"/>
        <pathelement location="${basedir}/lib/hsqldb.jar"/>
    </path>


    <patternset id="excluded.from.module.musique">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.musique">
        <patternset refid="excluded.from.module.musique"/>
    </patternset>

    <path id="musique.module.sourcepath">
        <dirset dir="${module.musique.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="musique.module.test.sourcepath">
        <dirset dir="${module.musique.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.musique" depends="compile.module.musique.production,compile.module.musique.tests"
            description="Compile module musique"/>

    <target name="compile.module.musique.production"
            depends="compile.module.jaudiotagger,compile.module.wavpack,compile.module.cuelib,compile.module.javalayer,compile.module.jflac,compile.module.jmac,compile.module.jorbis"
            description="Compile module musique; production classes">
        <mkdir dir="${musique.output.dir}"/>
        <javac destdir="${musique.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.musique}/javac">
            <compilerarg line="${compiler.args.musique}"/>
            <bootclasspath refid="musique.module.bootclasspath"/>
            <classpath refid="musique.module.classpath"/>
            <src refid="musique.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.musique"/>
        </javac>

        <copy todir="${musique.output.dir}">
            <fileset dir="${module.musique.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.musique.tests" depends="compile.module.musique.production"
            description="compile module musique; test classes" unless="skip.tests">
        <mkdir dir="${musique.testoutput.dir}"/>
        <javac destdir="${musique.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.musique}/javac">
            <compilerarg line="${compiler.args.musique}"/>
            <classpath refid="musique.module.classpath"/>
            <classpath>
                <path refid="musique.module.classpath"/>
                <pathelement location="${musique.output.dir}"/>
            </classpath>
            <src refid="musique.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.musique"/>
        </javac>

        <copy todir="${musique.testoutput.dir}">
            <fileset dir="${module.musique.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.musique" description="cleanup module">
        <delete dir="${musique.output.dir}"/>
        <delete dir="${musique.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean"
            depends="clean.module.cuelib, clean.module.javalayer, clean.module.jflac, clean.module.jmac, clean.module.jorbis, clean.module.wavpack, clean.module.jaudiotagger, clean.module.musique, clean.artifact.release"
            description="cleanup all"/>

    <target name="build.modules"
            depends="init, clean, compile.module.cuelib, compile.module.javalayer, compile.module.jflac, compile.module.jmac, compile.module.jorbis, compile.module.wavpack, compile.module.jaudiotagger, compile.module.musique"
            description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.cuelib" value="${basedir}/lib"/>
        <property name="artifact.output.jaudiotagger" value="${basedir}/lib"/>
        <property name="artifact.output.javalayer" value="${basedir}/lib"/>
        <property name="artifact.output.jflac" value="${basedir}/lib"/>
        <property name="artifact.output.jmac" value="${basedir}/lib"/>
        <property name="artifact.output.jorbis" value="${basedir}/lib"/>
        <property name="artifact.output.musique" value="${basedir}"/>
        <property name="artifact.output.release" value="${basedir}/tags/current"/>
        <property name="artifact.output.wavpack" value="${basedir}/lib"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.cuelib.jar" value="${artifacts.temp.dir}/cuelib.jar"/>
        <property name="temp.jar.path.jaudiotagger.jar" value="${artifacts.temp.dir}/jaudiotagger.jar"/>
        <property name="temp.jar.path.javalayer.jar" value="${artifacts.temp.dir}/javalayer.jar"/>
        <property name="temp.jar.path.jflac.jar" value="${artifacts.temp.dir}/jflac.jar"/>
        <property name="temp.jar.path.jmac.jar" value="${artifacts.temp.dir}/jmac.jar"/>
        <property name="temp.jar.path.jorbis.jar" value="${artifacts.temp.dir}/jorbis.jar"/>
        <property name="temp.jar.path.musique.jar" value="${artifacts.temp.dir}/musique.jar"/>
        <property name="temp.jar.path.wavpack.jar" value="${artifacts.temp.dir}/wavpack.jar"/>
    </target>

    <target name="clean.artifact.release" description="clean release artifact output">
        <delete dir="${artifact.output.release}"/>
    </target>

    <target name="artifact.cuelib" depends="init.artifacts, compile.module.cuelib"
            description="Build &apos;cuelib&apos; artifact">
        <property name="artifact.temp.output.cuelib" value="${artifacts.temp.dir}/cuelib"/>
        <mkdir dir="${artifact.temp.output.cuelib}"/>
        <jar destfile="${temp.jar.path.cuelib.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${cuelib.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.cuelib.jar}" tofile="${artifact.temp.output.cuelib}/cuelib.jar"/>
    </target>

    <target name="artifact.jaudiotagger" depends="init.artifacts, compile.module.jaudiotagger"
            description="Build &apos;jaudiotagger&apos; artifact">
        <property name="artifact.temp.output.jaudiotagger" value="${artifacts.temp.dir}/jaudiotagger"/>
        <mkdir dir="${artifact.temp.output.jaudiotagger}"/>
        <jar destfile="${temp.jar.path.jaudiotagger.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${jaudiotagger.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.jaudiotagger.jar}" tofile="${artifact.temp.output.jaudiotagger}/jaudiotagger.jar"/>
    </target>

    <target name="artifact.javalayer" depends="init.artifacts, compile.module.javalayer"
            description="Build &apos;javalayer&apos; artifact">
        <property name="artifact.temp.output.javalayer" value="${artifacts.temp.dir}/javalayer"/>
        <mkdir dir="${artifact.temp.output.javalayer}"/>
        <jar destfile="${temp.jar.path.javalayer.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${javalayer.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.javalayer.jar}" tofile="${artifact.temp.output.javalayer}/javalayer.jar"/>
    </target>

    <target name="artifact.jflac" depends="init.artifacts, compile.module.jflac"
            description="Build &apos;jflac&apos; artifact">
        <property name="artifact.temp.output.jflac" value="${artifacts.temp.dir}/jflac"/>
        <mkdir dir="${artifact.temp.output.jflac}"/>
        <jar destfile="${temp.jar.path.jflac.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${jflac.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.jflac.jar}" tofile="${artifact.temp.output.jflac}/jflac.jar"/>
    </target>

    <target name="artifact.jmac" depends="init.artifacts, compile.module.jmac"
            description="Build &apos;jmac&apos; artifact">
        <property name="artifact.temp.output.jmac" value="${artifacts.temp.dir}/jmac"/>
        <mkdir dir="${artifact.temp.output.jmac}"/>
        <jar destfile="${temp.jar.path.jmac.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${jmac.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.jmac.jar}" tofile="${artifact.temp.output.jmac}/jmac.jar"/>
    </target>

    <target name="artifact.jorbis" depends="init.artifacts, compile.module.jorbis"
            description="Build &apos;jorbis&apos; artifact">
        <property name="artifact.temp.output.jorbis" value="${artifacts.temp.dir}/jorbis"/>
        <mkdir dir="${artifact.temp.output.jorbis}"/>
        <jar destfile="${temp.jar.path.jorbis.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${jorbis.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.jorbis.jar}" tofile="${artifact.temp.output.jorbis}/jorbis.jar"/>
    </target>

    <target name="artifact.musique" depends="init.artifacts, compile.module.musique"
            description="Build &apos;musique&apos; artifact">
        <property name="artifact.temp.output.musique" value="${artifacts.temp.dir}/musique"/>
        <mkdir dir="${artifact.temp.output.musique}"/>
        <jar destfile="${temp.jar.path.musique.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset file="${basedir}/META-INF/MANIFEST.MF" prefix="META-INF"/>
            <zipfileset dir="${musique.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.musique.jar}" tofile="${artifact.temp.output.musique}/musique.jar"/>
    </target>

    <target name="artifact.release"
            depends="init.artifacts, artifact.cuelib, artifact.jaudiotagger, artifact.javalayer, artifact.jflac, artifact.jmac, artifact.jorbis, artifact.wavpack, artifact.musique"
            description="Build &apos;release&apos; artifact">
        <mkdir dir="${artifact.output.release}"/>
        <mkdir dir="${artifact.output.release}/lib"/>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.cuelib}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.jaudiotagger}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.javalayer}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.jflac}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.jmac}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.jorbis}"/>
        </copy>
        <copy todir="${artifact.output.release}/lib">
            <fileset dir="${artifact.temp.output.wavpack}"/>
        </copy>
        <copy file="${basedir}/lib/hsqldb.jar" tofile="${artifact.output.release}/lib/hsqldb.jar"/>
        <copy todir="${artifact.output.release}">
            <fileset dir="${artifact.temp.output.musique}"/>
        </copy>
        <mkdir dir="${artifact.output.release}/resources"/>
        <mkdir dir="${artifact.output.release}/resources/images"/>
        <copy todir="${artifact.output.release}/resources/images">
            <fileset dir="${basedir}/resources/images"/>
        </copy>
        <copy file="${basedir}/Copying" tofile="${artifact.output.release}/Copying"/>
        <copy file="${basedir}/musique.sh" tofile="${artifact.output.release}/musique.sh"/>
        <copy file="${basedir}/README" tofile="${artifact.output.release}/README"/>
        <copy file="${basedir}/musique.bat" tofile="${artifact.output.release}/musique.bat"/>
        <mkdir dir="${artifact.output.release}/native"/>
        <copy todir="${artifact.output.release}/native">
            <fileset dir="${basedir}/native"/>
        </copy>
    </target>

    <target name="artifact.wavpack" depends="init.artifacts, compile.module.wavpack"
            description="Build &apos;wavpack&apos; artifact">
        <property name="artifact.temp.output.wavpack" value="${artifacts.temp.dir}/wavpack"/>
        <mkdir dir="${artifact.temp.output.wavpack}"/>
        <jar destfile="${temp.jar.path.wavpack.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${wavpack.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.wavpack.jar}" tofile="${artifact.temp.output.wavpack}/wavpack.jar"/>
    </target>

    <target name="build.all.artifacts"
            depends="artifact.cuelib, artifact.jaudiotagger, artifact.javalayer, artifact.jflac, artifact.jmac, artifact.jorbis, artifact.musique, artifact.release, artifact.wavpack"
            description="Build all artifacts">
        <mkdir dir="${artifact.output.cuelib}"/>
        <copy todir="${artifact.output.cuelib}">
            <fileset dir="${artifact.temp.output.cuelib}"/>
        </copy>
        <mkdir dir="${artifact.output.jaudiotagger}"/>
        <copy todir="${artifact.output.jaudiotagger}">
            <fileset dir="${artifact.temp.output.jaudiotagger}"/>
        </copy>
        <mkdir dir="${artifact.output.javalayer}"/>
        <copy todir="${artifact.output.javalayer}">
            <fileset dir="${artifact.temp.output.javalayer}"/>
        </copy>
        <mkdir dir="${artifact.output.jflac}"/>
        <copy todir="${artifact.output.jflac}">
            <fileset dir="${artifact.temp.output.jflac}"/>
        </copy>
        <mkdir dir="${artifact.output.jmac}"/>
        <copy todir="${artifact.output.jmac}">
            <fileset dir="${artifact.temp.output.jmac}"/>
        </copy>
        <mkdir dir="${artifact.output.jorbis}"/>
        <copy todir="${artifact.output.jorbis}">
            <fileset dir="${artifact.temp.output.jorbis}"/>
        </copy>
        <mkdir dir="${artifact.output.musique}"/>
        <copy todir="${artifact.output.musique}">
            <fileset dir="${artifact.temp.output.musique}"/>
        </copy>
        <mkdir dir="${artifact.output.wavpack}"/>
        <copy todir="${artifact.output.wavpack}">
            <fileset dir="${artifact.temp.output.wavpack}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>