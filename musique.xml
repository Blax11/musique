<?xml version="1.0" encoding="UTF-8"?>
<project name="musique" default="all">
  
  
  <property file="musique.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
    <include name="**/?*.ser"/>
    <include name="**/?*.sql"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.lastfm.classpath">
    <pathelement location="${basedir}/lib/last.fm-bindings.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module aac -->
  
  <dirname property="module.aac.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.aac" value="${compiler.args}"/>
  
  <property name="aac.output.dir" value="${module.aac.basedir}/build/production/aac"/>
  <property name="aac.testoutput.dir" value="${module.aac.basedir}/build/test/aac"/>
  
  <path id="aac.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="aac.module.production.classpath"/>
  
  <path id="aac.runtime.production.module.classpath">
    <pathelement location="${aac.output.dir}"/>
  </path>
  
  <path id="aac.module.classpath">
    <pathelement location="${aac.output.dir}"/>
  </path>
  
  <path id="aac.runtime.module.classpath">
    <pathelement location="${aac.testoutput.dir}"/>
    <pathelement location="${aac.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.aac">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.aac">
    <patternset refid="excluded.from.module.aac"/>
  </patternset>
  
  <path id="aac.module.sourcepath">
    <dirset dir="${module.aac.basedir}/modules/aac">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.aac" depends="compile.module.aac.production,compile.module.aac.tests" description="Compile module aac"/>
  
  <target name="compile.module.aac.production" description="Compile module aac; production classes">
    <mkdir dir="${aac.output.dir}"/>
    <javac destdir="${aac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.aac}"/>
      <bootclasspath refid="aac.module.bootclasspath"/>
      <classpath refid="aac.module.production.classpath"/>
      <src refid="aac.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.aac"/>
    </javac>
    
    <copy todir="${aac.output.dir}">
      <fileset dir="${module.aac.basedir}/modules/aac/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.aac.tests" depends="compile.module.aac.production" description="compile module aac; test classes" unless="skip.tests"/>
  
  <target name="clean.module.aac" description="cleanup module">
    <delete dir="${aac.output.dir}"/>
    <delete dir="${aac.testoutput.dir}"/>
  </target>
  
  
  <!-- Module alac -->
  
  <dirname property="module.alac.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.alac" value="${compiler.args}"/>
  
  <property name="alac.output.dir" value="${module.alac.basedir}/build/production/alac"/>
  <property name="alac.testoutput.dir" value="${module.alac.basedir}/build/test/alac"/>
  
  <path id="alac.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="alac.module.production.classpath"/>
  
  <path id="alac.runtime.production.module.classpath">
    <pathelement location="${alac.output.dir}"/>
  </path>
  
  <path id="alac.module.classpath">
    <pathelement location="${alac.output.dir}"/>
  </path>
  
  <path id="alac.runtime.module.classpath">
    <pathelement location="${alac.testoutput.dir}"/>
    <pathelement location="${alac.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.alac">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.alac">
    <patternset refid="excluded.from.module.alac"/>
  </patternset>
  
  <path id="alac.module.sourcepath">
    <dirset dir="${module.alac.basedir}/modules/alac">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.alac" depends="compile.module.alac.production,compile.module.alac.tests" description="Compile module alac"/>
  
  <target name="compile.module.alac.production" description="Compile module alac; production classes">
    <mkdir dir="${alac.output.dir}"/>
    <javac destdir="${alac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.alac}"/>
      <bootclasspath refid="alac.module.bootclasspath"/>
      <classpath refid="alac.module.production.classpath"/>
      <src refid="alac.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.alac"/>
    </javac>
    
    <copy todir="${alac.output.dir}">
      <fileset dir="${module.alac.basedir}/modules/alac/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.alac.tests" depends="compile.module.alac.production" description="compile module alac; test classes" unless="skip.tests"/>
  
  <target name="clean.module.alac" description="cleanup module">
    <delete dir="${alac.output.dir}"/>
    <delete dir="${alac.testoutput.dir}"/>
  </target>
  
  
  <!-- Module cuelib -->
  
  <dirname property="module.cuelib.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.cuelib" value="${compiler.args}"/>
  
  <property name="cuelib.output.dir" value="${module.cuelib.basedir}/build/production/cuelib"/>
  <property name="cuelib.testoutput.dir" value="${module.cuelib.basedir}/build/test/cuelib"/>
  
  <path id="cuelib.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="cuelib.module.production.classpath"/>
  
  <path id="cuelib.runtime.production.module.classpath">
    <pathelement location="${cuelib.output.dir}"/>
  </path>
  
  <path id="cuelib.module.classpath">
    <pathelement location="${cuelib.output.dir}"/>
  </path>
  
  <path id="cuelib.runtime.module.classpath">
    <pathelement location="${cuelib.testoutput.dir}"/>
    <pathelement location="${cuelib.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.cuelib">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.cuelib">
    <patternset refid="excluded.from.module.cuelib"/>
  </patternset>
  
  <path id="cuelib.module.sourcepath">
    <dirset dir="${module.cuelib.basedir}/modules/cuelib">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.cuelib" depends="compile.module.cuelib.production,compile.module.cuelib.tests" description="Compile module cuelib"/>
  
  <target name="compile.module.cuelib.production" description="Compile module cuelib; production classes">
    <mkdir dir="${cuelib.output.dir}"/>
    <javac destdir="${cuelib.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.cuelib}"/>
      <bootclasspath refid="cuelib.module.bootclasspath"/>
      <classpath refid="cuelib.module.production.classpath"/>
      <src refid="cuelib.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.cuelib"/>
    </javac>
    
    <copy todir="${cuelib.output.dir}">
      <fileset dir="${module.cuelib.basedir}/modules/cuelib/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.cuelib.tests" depends="compile.module.cuelib.production" description="compile module cuelib; test classes" unless="skip.tests"/>
  
  <target name="clean.module.cuelib" description="cleanup module">
    <delete dir="${cuelib.output.dir}"/>
    <delete dir="${cuelib.testoutput.dir}"/>
  </target>
  
  
  <!-- Module javalayer -->
  
  <dirname property="module.javalayer.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.javalayer" value="${compiler.args}"/>
  
  <property name="javalayer.output.dir" value="${module.javalayer.basedir}/build/production/javalayer"/>
  <property name="javalayer.testoutput.dir" value="${module.javalayer.basedir}/build/test/javalayer"/>
  
  <path id="javalayer.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="javalayer.module.production.classpath"/>
  
  <path id="javalayer.runtime.production.module.classpath">
    <pathelement location="${javalayer.output.dir}"/>
  </path>
  
  <path id="javalayer.module.classpath">
    <pathelement location="${javalayer.output.dir}"/>
  </path>
  
  <path id="javalayer.runtime.module.classpath">
    <pathelement location="${javalayer.testoutput.dir}"/>
    <pathelement location="${javalayer.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.javalayer">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.javalayer">
    <patternset refid="excluded.from.module.javalayer"/>
  </patternset>
  
  <path id="javalayer.module.sourcepath">
    <dirset dir="${module.javalayer.basedir}/modules/javalayer">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.javalayer" depends="compile.module.javalayer.production,compile.module.javalayer.tests" description="Compile module javalayer"/>
  
  <target name="compile.module.javalayer.production" description="Compile module javalayer; production classes">
    <mkdir dir="${javalayer.output.dir}"/>
    <javac destdir="${javalayer.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.javalayer}"/>
      <bootclasspath refid="javalayer.module.bootclasspath"/>
      <classpath refid="javalayer.module.production.classpath"/>
      <src refid="javalayer.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.javalayer"/>
    </javac>
    
    <copy todir="${javalayer.output.dir}">
      <fileset dir="${module.javalayer.basedir}/modules/javalayer/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.javalayer.tests" depends="compile.module.javalayer.production" description="compile module javalayer; test classes" unless="skip.tests"/>
  
  <target name="clean.module.javalayer" description="cleanup module">
    <delete dir="${javalayer.output.dir}"/>
    <delete dir="${javalayer.testoutput.dir}"/>
  </target>
  
  
  <!-- Module jflac -->
  
  <dirname property="module.jflac.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.jflac" value="${compiler.args}"/>
  
  <property name="jflac.output.dir" value="${module.jflac.basedir}/build/production/jflac"/>
  <property name="jflac.testoutput.dir" value="${module.jflac.basedir}/build/test/jflac"/>
  
  <path id="jflac.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jflac.module.production.classpath"/>
  
  <path id="jflac.runtime.production.module.classpath">
    <pathelement location="${jflac.output.dir}"/>
  </path>
  
  <path id="jflac.module.classpath">
    <pathelement location="${jflac.output.dir}"/>
  </path>
  
  <path id="jflac.runtime.module.classpath">
    <pathelement location="${jflac.testoutput.dir}"/>
    <pathelement location="${jflac.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.jflac">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jflac">
    <patternset refid="excluded.from.module.jflac"/>
  </patternset>
  
  <path id="jflac.module.sourcepath">
    <dirset dir="${module.jflac.basedir}/modules/jflac">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jflac" depends="compile.module.jflac.production,compile.module.jflac.tests" description="Compile module jflac"/>
  
  <target name="compile.module.jflac.production" description="Compile module jflac; production classes">
    <mkdir dir="${jflac.output.dir}"/>
    <javac destdir="${jflac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.jflac}"/>
      <bootclasspath refid="jflac.module.bootclasspath"/>
      <classpath refid="jflac.module.production.classpath"/>
      <src refid="jflac.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jflac"/>
    </javac>
    
    <copy todir="${jflac.output.dir}">
      <fileset dir="${module.jflac.basedir}/modules/jflac/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jflac.tests" depends="compile.module.jflac.production" description="compile module jflac; test classes" unless="skip.tests"/>
  
  <target name="clean.module.jflac" description="cleanup module">
    <delete dir="${jflac.output.dir}"/>
    <delete dir="${jflac.testoutput.dir}"/>
  </target>
  
  
  <!-- Module jmac -->
  
  <dirname property="module.jmac.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.jmac" value="${compiler.args}"/>
  
  <property name="jmac.output.dir" value="${module.jmac.basedir}/build/production/jmac"/>
  <property name="jmac.testoutput.dir" value="${module.jmac.basedir}/build/test/jmac"/>
  
  <path id="jmac.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jmac.module.production.classpath"/>
  
  <path id="jmac.runtime.production.module.classpath">
    <pathelement location="${jmac.output.dir}"/>
  </path>
  
  <path id="jmac.module.classpath">
    <pathelement location="${jmac.output.dir}"/>
  </path>
  
  <path id="jmac.runtime.module.classpath">
    <pathelement location="${jmac.testoutput.dir}"/>
    <pathelement location="${jmac.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.jmac">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jmac">
    <patternset refid="excluded.from.module.jmac"/>
  </patternset>
  
  <path id="jmac.module.sourcepath">
    <dirset dir="${module.jmac.basedir}/modules/jmac">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jmac" depends="compile.module.jmac.production,compile.module.jmac.tests" description="Compile module jmac"/>
  
  <target name="compile.module.jmac.production" description="Compile module jmac; production classes">
    <mkdir dir="${jmac.output.dir}"/>
    <javac destdir="${jmac.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.jmac}"/>
      <bootclasspath refid="jmac.module.bootclasspath"/>
      <classpath refid="jmac.module.production.classpath"/>
      <src refid="jmac.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jmac"/>
    </javac>
    
    <copy todir="${jmac.output.dir}">
      <fileset dir="${module.jmac.basedir}/modules/jmac/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jmac.tests" depends="compile.module.jmac.production" description="compile module jmac; test classes" unless="skip.tests"/>
  
  <target name="clean.module.jmac" description="cleanup module">
    <delete dir="${jmac.output.dir}"/>
    <delete dir="${jmac.testoutput.dir}"/>
  </target>
  
  
  <!-- Module jorbis -->
  
  <dirname property="module.jorbis.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.jorbis" value="${compiler.args}"/>
  
  <property name="jorbis.output.dir" value="${module.jorbis.basedir}/build/production/jorbis"/>
  <property name="jorbis.testoutput.dir" value="${module.jorbis.basedir}/build/test/jorbis"/>
  
  <path id="jorbis.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jorbis.module.production.classpath"/>
  
  <path id="jorbis.runtime.production.module.classpath">
    <pathelement location="${jorbis.output.dir}"/>
  </path>
  
  <path id="jorbis.module.classpath">
    <pathelement location="${jorbis.output.dir}"/>
  </path>
  
  <path id="jorbis.runtime.module.classpath">
    <pathelement location="${jorbis.testoutput.dir}"/>
    <pathelement location="${jorbis.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.jorbis">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jorbis">
    <patternset refid="excluded.from.module.jorbis"/>
  </patternset>
  
  <path id="jorbis.module.sourcepath">
    <dirset dir="${module.jorbis.basedir}/modules/jorbis">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jorbis" depends="compile.module.jorbis.production,compile.module.jorbis.tests" description="Compile module jorbis"/>
  
  <target name="compile.module.jorbis.production" description="Compile module jorbis; production classes">
    <mkdir dir="${jorbis.output.dir}"/>
    <javac destdir="${jorbis.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.jorbis}"/>
      <bootclasspath refid="jorbis.module.bootclasspath"/>
      <classpath refid="jorbis.module.production.classpath"/>
      <src refid="jorbis.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jorbis"/>
    </javac>
    
    <copy todir="${jorbis.output.dir}">
      <fileset dir="${module.jorbis.basedir}/modules/jorbis/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jorbis.tests" depends="compile.module.jorbis.production" description="compile module jorbis; test classes" unless="skip.tests"/>
  
  <target name="clean.module.jorbis" description="cleanup module">
    <delete dir="${jorbis.output.dir}"/>
    <delete dir="${jorbis.testoutput.dir}"/>
  </target>
  
  
  <!-- Module tta -->
  
  <dirname property="module.tta.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.tta" value="${compiler.args}"/>
  
  <property name="tta.output.dir" value="${module.tta.basedir}/build/production/tta"/>
  <property name="tta.testoutput.dir" value="${module.tta.basedir}/build/test/tta"/>
  
  <path id="tta.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="tta.module.production.classpath"/>
  
  <path id="tta.runtime.production.module.classpath">
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  <path id="tta.module.classpath">
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  <path id="tta.runtime.module.classpath">
    <pathelement location="${tta.testoutput.dir}"/>
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.tta">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.tta">
    <patternset refid="excluded.from.module.tta"/>
  </patternset>
  
  <path id="tta.module.sourcepath">
    <dirset dir="${module.tta.basedir}/modules/tta">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.tta" depends="compile.module.tta.production,compile.module.tta.tests" description="Compile module tta"/>
  
  <target name="compile.module.tta.production" description="Compile module tta; production classes">
    <mkdir dir="${tta.output.dir}"/>
    <javac destdir="${tta.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.tta}"/>
      <bootclasspath refid="tta.module.bootclasspath"/>
      <classpath refid="tta.module.production.classpath"/>
      <src refid="tta.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.tta"/>
    </javac>
    
    <copy todir="${tta.output.dir}">
      <fileset dir="${module.tta.basedir}/modules/tta/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.tta.tests" depends="compile.module.tta.production" description="compile module tta; test classes" unless="skip.tests"/>
  
  <target name="clean.module.tta" description="cleanup module">
    <delete dir="${tta.output.dir}"/>
    <delete dir="${tta.testoutput.dir}"/>
  </target>
  
  
  <!-- Module wavpack -->
  
  <dirname property="module.wavpack.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.wavpack" value="${compiler.args}"/>
  
  <property name="wavpack.output.dir" value="${module.wavpack.basedir}/build/production/wavpack"/>
  <property name="wavpack.testoutput.dir" value="${module.wavpack.basedir}/build/test/wavpack"/>
  
  <path id="wavpack.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="wavpack.module.production.classpath"/>
  
  <path id="wavpack.runtime.production.module.classpath">
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  <path id="wavpack.module.classpath">
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  <path id="wavpack.runtime.module.classpath">
    <pathelement location="${wavpack.testoutput.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.wavpack">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.wavpack">
    <patternset refid="excluded.from.module.wavpack"/>
  </patternset>
  
  <path id="wavpack.module.sourcepath">
    <dirset dir="${module.wavpack.basedir}/modules/wavpack">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.wavpack" depends="compile.module.wavpack.production,compile.module.wavpack.tests" description="Compile module wavpack"/>
  
  <target name="compile.module.wavpack.production" description="Compile module wavpack; production classes">
    <mkdir dir="${wavpack.output.dir}"/>
    <javac destdir="${wavpack.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.wavpack}"/>
      <bootclasspath refid="wavpack.module.bootclasspath"/>
      <classpath refid="wavpack.module.production.classpath"/>
      <src refid="wavpack.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.wavpack"/>
    </javac>
    
    <copy todir="${wavpack.output.dir}">
      <fileset dir="${module.wavpack.basedir}/modules/wavpack/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.wavpack.tests" depends="compile.module.wavpack.production" description="compile module wavpack; test classes" unless="skip.tests"/>
  
  <target name="clean.module.wavpack" description="cleanup module">
    <delete dir="${wavpack.output.dir}"/>
    <delete dir="${wavpack.testoutput.dir}"/>
  </target>
  
  
  <!-- Module jaudiotagger -->
  
  <dirname property="module.jaudiotagger.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.jaudiotagger" value="${compiler.args}"/>
  
  <property name="jaudiotagger.output.dir" value="${module.jaudiotagger.basedir}/build/production/jaudiotagger"/>
  <property name="jaudiotagger.testoutput.dir" value="${module.jaudiotagger.basedir}/build/test/jaudiotagger"/>
  
  <path id="jaudiotagger.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jaudiotagger.module.production.classpath">
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  <path id="jaudiotagger.runtime.production.module.classpath">
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  <path id="jaudiotagger.module.classpath">
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.testoutput.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  <path id="jaudiotagger.runtime.module.classpath">
    <pathelement location="${jaudiotagger.testoutput.dir}"/>
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.testoutput.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.jaudiotagger">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jaudiotagger">
    <patternset refid="excluded.from.module.jaudiotagger"/>
  </patternset>
  
  <path id="jaudiotagger.module.sourcepath">
    <dirset dir="${module.jaudiotagger.basedir}/modules/jaudiotagger">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jaudiotagger" depends="compile.module.jaudiotagger.production,compile.module.jaudiotagger.tests" description="Compile module jaudiotagger"/>
  
  <target name="compile.module.jaudiotagger.production" depends="compile.module.wavpack" description="Compile module jaudiotagger; production classes">
    <mkdir dir="${jaudiotagger.output.dir}"/>
    <javac destdir="${jaudiotagger.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.jaudiotagger}"/>
      <bootclasspath refid="jaudiotagger.module.bootclasspath"/>
      <classpath refid="jaudiotagger.module.production.classpath"/>
      <src refid="jaudiotagger.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jaudiotagger"/>
    </javac>
    
    <copy todir="${jaudiotagger.output.dir}">
      <fileset dir="${module.jaudiotagger.basedir}/modules/jaudiotagger/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jaudiotagger.tests" depends="compile.module.jaudiotagger.production" description="compile module jaudiotagger; test classes" unless="skip.tests"/>
  
  <target name="clean.module.jaudiotagger" description="cleanup module">
    <delete dir="${jaudiotagger.output.dir}"/>
    <delete dir="${jaudiotagger.testoutput.dir}"/>
  </target>
  
  
  <!-- Module musique -->
  
  <dirname property="module.musique.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.musique" value="${compiler.args}"/>
  
  <property name="musique.output.dir" value="${module.musique.basedir}/build/production/musique"/>
  <property name="musique.testoutput.dir" value="${module.musique.basedir}/build/test/musique"/>
  
  <path id="musique.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="musique.module.production.classpath">
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
    <pathelement location="${cuelib.output.dir}"/>
    <pathelement location="${javalayer.output.dir}"/>
    <pathelement location="${jflac.output.dir}"/>
    <pathelement location="${jmac.output.dir}"/>
    <pathelement location="${jorbis.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.7.jar"/>
    <path refid="library.lastfm.classpath"/>
    <pathelement location="${alac.output.dir}"/>
    <pathelement location="${aac.output.dir}"/>
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  <path id="musique.runtime.production.module.classpath">
    <pathelement location="${musique.output.dir}"/>
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
    <pathelement location="${cuelib.output.dir}"/>
    <pathelement location="${javalayer.output.dir}"/>
    <pathelement location="${jflac.output.dir}"/>
    <pathelement location="${jmac.output.dir}"/>
    <pathelement location="${jorbis.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.7.jar"/>
    <path refid="library.lastfm.classpath"/>
    <pathelement location="${alac.output.dir}"/>
    <pathelement location="${aac.output.dir}"/>
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  <path id="musique.module.classpath">
    <pathelement location="${musique.output.dir}"/>
    <pathelement location="${jaudiotagger.testoutput.dir}"/>
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.testoutput.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
    <pathelement location="${cuelib.testoutput.dir}"/>
    <pathelement location="${cuelib.output.dir}"/>
    <pathelement location="${javalayer.testoutput.dir}"/>
    <pathelement location="${javalayer.output.dir}"/>
    <pathelement location="${jflac.testoutput.dir}"/>
    <pathelement location="${jflac.output.dir}"/>
    <pathelement location="${jmac.testoutput.dir}"/>
    <pathelement location="${jmac.output.dir}"/>
    <pathelement location="${jorbis.testoutput.dir}"/>
    <pathelement location="${jorbis.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.7.jar"/>
    <path refid="library.lastfm.classpath"/>
    <pathelement location="${alac.testoutput.dir}"/>
    <pathelement location="${alac.output.dir}"/>
    <pathelement location="${aac.testoutput.dir}"/>
    <pathelement location="${aac.output.dir}"/>
    <pathelement location="${tta.testoutput.dir}"/>
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  <path id="musique.runtime.module.classpath">
    <pathelement location="${musique.testoutput.dir}"/>
    <pathelement location="${musique.output.dir}"/>
    <pathelement location="${jaudiotagger.testoutput.dir}"/>
    <pathelement location="${jaudiotagger.output.dir}"/>
    <pathelement location="${wavpack.testoutput.dir}"/>
    <pathelement location="${wavpack.output.dir}"/>
    <pathelement location="${cuelib.testoutput.dir}"/>
    <pathelement location="${cuelib.output.dir}"/>
    <pathelement location="${javalayer.testoutput.dir}"/>
    <pathelement location="${javalayer.output.dir}"/>
    <pathelement location="${jflac.testoutput.dir}"/>
    <pathelement location="${jflac.output.dir}"/>
    <pathelement location="${jmac.testoutput.dir}"/>
    <pathelement location="${jmac.output.dir}"/>
    <pathelement location="${jorbis.testoutput.dir}"/>
    <pathelement location="${jorbis.output.dir}"/>
    <pathelement location="${basedir}/lib/junit-4.7.jar"/>
    <path refid="library.lastfm.classpath"/>
    <pathelement location="${alac.testoutput.dir}"/>
    <pathelement location="${alac.output.dir}"/>
    <pathelement location="${aac.testoutput.dir}"/>
    <pathelement location="${aac.output.dir}"/>
    <pathelement location="${tta.testoutput.dir}"/>
    <pathelement location="${tta.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.musique">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.musique">
    <patternset refid="excluded.from.module.musique"/>
  </patternset>
  
  <path id="musique.module.sourcepath">
    <dirset dir="${module.musique.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="musique.module.test.sourcepath">
    <dirset dir="${module.musique.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.musique" depends="compile.module.musique.production,compile.module.musique.tests" description="Compile module musique"/>
  
  <target name="compile.module.musique.production" depends="compile.module.jaudiotagger,compile.module.wavpack,compile.module.cuelib,compile.module.javalayer,compile.module.jflac,compile.module.jmac,compile.module.jorbis,compile.module.alac,compile.module.aac,compile.module.tta" description="Compile module musique; production classes">
    <mkdir dir="${musique.output.dir}"/>
    <javac destdir="${musique.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.musique}"/>
      <bootclasspath refid="musique.module.bootclasspath"/>
      <classpath refid="musique.module.production.classpath"/>
      <src refid="musique.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.musique"/>
    </javac>
    
    <copy todir="${musique.output.dir}">
      <fileset dir="${module.musique.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.musique.tests" depends="compile.module.musique.production" description="compile module musique; test classes" unless="skip.tests">
    <mkdir dir="${musique.testoutput.dir}"/>
    <javac destdir="${musique.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.musique}"/>
      <bootclasspath refid="musique.module.bootclasspath"/>
      <classpath refid="musique.module.classpath"/>
      <src refid="musique.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.musique"/>
    </javac>
    
    <copy todir="${musique.testoutput.dir}">
      <fileset dir="${module.musique.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.musique" description="cleanup module">
    <delete dir="${musique.output.dir}"/>
    <delete dir="${musique.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.aac, clean.module.alac, clean.module.cuelib, clean.module.javalayer, clean.module.jflac, clean.module.jmac, clean.module.jorbis, clean.module.tta, clean.module.wavpack, clean.module.jaudiotagger, clean.module.musique, clean.artifact.release" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.aac, compile.module.alac, compile.module.cuelib, compile.module.javalayer, compile.module.jflac, compile.module.jmac, compile.module.jorbis, compile.module.tta, compile.module.wavpack, compile.module.jaudiotagger, compile.module.musique" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.musique" value="${basedir}"/>
    <property name="artifact.output.release" value="${basedir}/dist/musique"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.musique.jar" value="${artifacts.temp.dir}/musique.jar"/>
  </target>
  
  <target name="clean.artifact.release" description="clean release artifact output">
    <delete dir="${artifact.output.release}"/>
  </target>
  
  <target name="artifact.musique" depends="init.artifacts, compile.module.musique, compile.module.jaudiotagger, compile.module.javalayer, compile.module.jflac, compile.module.jmac, compile.module.jorbis, compile.module.wavpack, compile.module.cuelib, compile.module.aac, compile.module.alac" description="Build &apos;musique&apos; artifact">
    <property name="artifact.temp.output.musique" value="${artifacts.temp.dir}/musique"/>
    <mkdir dir="${artifact.temp.output.musique}"/>
    <jar destfile="${temp.jar.path.musique.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${musique.output.dir}"/>
      <zipfileset dir="${jaudiotagger.output.dir}"/>
      <zipfileset dir="${javalayer.output.dir}"/>
      <zipfileset dir="${jflac.output.dir}"/>
      <zipfileset dir="${jmac.output.dir}"/>
      <zipfileset dir="${jorbis.output.dir}"/>
      <zipfileset dir="${wavpack.output.dir}"/>
      <zipfileset dir="${cuelib.output.dir}"/>
      <zipfileset file="${basedir}/src/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${basedir}/src/META-INF/services" prefix="META-INF/services"/>
      <zipfileset dir="${aac.output.dir}"/>
      <zipfileset dir="${alac.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.musique.jar}" tofile="${artifact.temp.output.musique}/musique.jar"/>
  </target>
  
  <target name="artifact.release" depends="init.artifacts, artifact.musique" description="Build &apos;release&apos; artifact">
    <mkdir dir="${artifact.output.release}"/>
    <copy todir="${artifact.output.release}">
      <fileset dir="${artifact.temp.output.musique}"/>
    </copy>
    <copy file="${basedir}/Copying" tofile="${artifact.output.release}/Copying"/>
    <copy file="${basedir}/musique.bat" tofile="${artifact.output.release}/musique.bat"/>
    <copy file="${basedir}/musique.sh" tofile="${artifact.output.release}/musique.sh"/>
    <copy file="${basedir}/README" tofile="${artifact.output.release}/README"/>
    <copy file="${basedir}/logging.properties" tofile="${artifact.output.release}/logging.properties"/>
    <copy file="${basedir}/musique.vmoptions" tofile="${artifact.output.release}/musique.vmoptions"/>
    <mkdir dir="${artifact.output.release}/lib"/>
    <copy file="${basedir}/lib/last.fm-bindings.jar" tofile="${artifact.output.release}/lib/last.fm-bindings.jar"/>
    <copy file="${basedir}/ABOUT" tofile="${artifact.output.release}/ABOUT"/>
    <copy file="${basedir}/musique.png" tofile="${artifact.output.release}/musique.png"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.musique, artifact.release" description="Build all artifacts">
    <mkdir dir="${artifact.output.musique}"/>
    <copy todir="${artifact.output.musique}">
      <fileset dir="${artifact.temp.output.musique}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>